// <auto-generated />
using System;
using CustomerControl.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CustomerControl.Api.Data.Migrations
{
    [DbContext(typeof(CustomerControlContext))]
    [Migration("20240817172742_UpdateStructureAndAddSeedData")]
    partial class UpdateStructureAndAddSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CustomerControl.Api.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Rua Nova",
                            Document = "12345678901",
                            Name = "Customer 1",
                            Phone = "5551234567",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "Rua Alta",
                            Document = "98765432100",
                            Name = "Customer 2",
                            Phone = "5559876543",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("CustomerControl.Api.Entities.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Paid")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Invoices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 100.00m,
                            CustomerId = 1,
                            Description = "Invoice 1",
                            DueDate = new DateTime(2024, 9, 16, 17, 27, 41, 917, DateTimeKind.Utc).AddTicks(9158),
                            Paid = false
                        },
                        new
                        {
                            Id = 2,
                            Amount = 200.00m,
                            CustomerId = 2,
                            Description = "Invoice 2",
                            DueDate = new DateTime(2024, 9, 16, 17, 27, 41, 917, DateTimeKind.Utc).AddTicks(9264),
                            Paid = true
                        });
                });

            modelBuilder.Entity("CustomerControl.Api.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "alice@example.com",
                            Name = "Alice",
                            Password = "+TDCQANLq7qeMUjxCg0QvJrX0qnY0WbD2Lbv7EJF3bCYMg1sQbN3RHZr7RRhkipN"
                        },
                        new
                        {
                            Id = 2,
                            Email = "bob@example.com",
                            Name = "Bob",
                            Password = "dImTgkU5lr/RFZRW9N5ysfu0k6wLjx+ib7epmwwNUX3FHi9IjdyUvzFqEx4d0nHb"
                        });
                });

            modelBuilder.Entity("CustomerControl.Api.Entities.Customer", b =>
                {
                    b.HasOne("CustomerControl.Api.Entities.User", "User")
                        .WithMany("Customers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CustomerControl.Api.Entities.Invoice", b =>
                {
                    b.HasOne("CustomerControl.Api.Entities.Customer", "Customer")
                        .WithMany("Invoices")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CustomerControl.Api.Entities.Customer", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("CustomerControl.Api.Entities.User", b =>
                {
                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
